name: GitHub Release

on:
  workflow_dispatch:  # DÃ©clenchement manuel

jobs:
  github-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install setuptools build twine wheel

      - name: Build package
        run: python -m build

      - name: Get release version from pyproject.toml
        id: get_version
        run: |
          echo "version=$(python -c "import importlib.metadata; print(importlib.metadata.version('jasapp'))")" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/jasapp-${{ steps.get_version.outputs.version }}.tar.gz
          asset_name: jasapp-${{ steps.get_version.outputs.version }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Wheel Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/jasapp-${{ steps.get_version.outputs.version }}-py3-none-any.whl
          asset_name: jasapp-${{ steps.get_version.outputs.version }}-py3-none-any.whl
          asset_content_type: application/zip